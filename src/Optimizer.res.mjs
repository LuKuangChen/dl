// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Utilities from "./Utilities.res.mjs";
import * as Core__Array from "@rescript/core/src/Core__Array.res.mjs";

function learn($$eval, model, loss, dataset, optimizer, iteration, init) {
  var _iteration = iteration;
  var _init = init;
  var _currLoss = Number.POSITIVE_INFINITY;
  while(true) {
    var currLoss = _currLoss;
    var init$1 = _init;
    var iteration$1 = _iteration;
    if (iteration$1 === 0) {
      return init$1;
    }
    var match = $$eval(loss(dataset.map(function (datum) {
                  return model(datum.input);
                }), dataset.map(function (datum) {
                  return datum.output;
                })), init$1);
    var nextLoss = match.output;
    if (Math.pow(currLoss - nextLoss, 2.0) < Number.EPSILON) {
      return init$1;
    }
    var iteration$2 = iteration$1 - 1 | 0;
    var init$2 = optimizer(init$1, match.derivative);
    _currLoss = nextLoss;
    _init = init$2;
    _iteration = iteration$2;
    continue ;
  };
}

function alpha(alphaOpt) {
  var alpha$1 = alphaOpt !== undefined ? alphaOpt : 0.1;
  return function (value, gradient) {
    return Utilities.vsub(value, Utilities.emul(gradient, alpha$1));
  };
}

function adam(alphaOpt, beta1Opt, beta2Opt, epsilonOpt, length) {
  var alpha = alphaOpt !== undefined ? alphaOpt : 0.001;
  var beta1 = beta1Opt !== undefined ? beta1Opt : 0.9;
  var beta2 = beta2Opt !== undefined ? beta2Opt : 0.999;
  var epsilon = epsilonOpt !== undefined ? epsilonOpt : 1e-8;
  if (alpha < 0.0) {
    throw {
          RE_EXN_ID: "Assert_failure",
          _1: [
            "Optimizer.res",
            38,
            2
          ],
          Error: new Error()
        };
  }
  if (!(0.0 <= beta1 && beta1 < 1.0)) {
    throw {
          RE_EXN_ID: "Assert_failure",
          _1: [
            "Optimizer.res",
            39,
            2
          ],
          Error: new Error()
        };
  }
  if (!(0.0 <= beta2 && beta2 < 1.0)) {
    throw {
          RE_EXN_ID: "Assert_failure",
          _1: [
            "Optimizer.res",
            40,
            2
          ],
          Error: new Error()
        };
  }
  var m = {
    contents: Core__Array.make(length, 0.0)
  };
  var v = {
    contents: Core__Array.make(length, 0.0)
  };
  var t = {
    contents: 0
  };
  return function (value, gradient) {
    t.contents = t.contents + 1 | 0;
    var m$1 = m.contents;
    m.contents = Utilities.vadd(Utilities.emul(m$1, beta1), Utilities.emul(gradient, 1.0 - beta1));
    var v$1 = v.contents;
    v.contents = Utilities.vadd(Utilities.emul(v$1, beta2), Utilities.emul(gradient.map(function (g) {
                  return Math.pow(g, 2.0);
                }), 1.0 - beta2));
    var m_hat = Utilities.ediv(m.contents, 1.0 - Math.pow(beta1, t.contents));
    var v_hat = Utilities.ediv(v.contents, 1.0 - Math.pow(beta2, t.contents));
    return Utilities.vsub(value, Utilities.emul(Utilities.vdiv(m_hat, Utilities.eadd(v_hat.map(function (prim) {
                                return Math.sqrt(prim);
                              }), epsilon)), alpha));
  };
}

export {
  learn ,
  alpha ,
  adam ,
}
/* Utilities Not a pure module */
