// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Array from "@rescript/core/src/Core__Array.res.mjs";

function Learn(Model) {
  var learn = function (dataset, optimizer, iterationOpt) {
    var iteration = iterationOpt !== undefined ? iterationOpt : 100;
    var loss = Core__Array.reduce(dataset.map(function (param) {
              return Model.loss(Model.f(param.input), param.output);
            }), Model.Term.c(0.0), Model.Term.$plus);
    var init = Model.Term.initEnv;
    var _iteration = iteration;
    var _env = init;
    var _currLoss = Number.POSITIVE_INFINITY;
    while(true) {
      var currLoss = _currLoss;
      var env = _env;
      var iteration$1 = _iteration;
      if (iteration$1 === 0) {
        return env;
      }
      var match = Model.Term.$$eval(loss, env);
      var nextLoss = match.output;
      if (Math.pow(currLoss - nextLoss, 2.0) < Number.EPSILON) {
        return env;
      }
      var iteration$2 = iteration$1 - 1 | 0;
      var env$1 = optimizer(env, match.derivative);
      _currLoss = nextLoss;
      _env = env$1;
      _iteration = iteration$2;
      continue ;
    };
  };
  return {
          learn: learn
        };
}

export {
  Learn ,
}
/* No side effect */
