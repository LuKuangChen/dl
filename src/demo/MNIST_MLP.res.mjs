// Generated by ReScript, PLEASE EDIT WITH CARE

import * as AutoDiff from "../AutoDiff.res.mjs";
import * as Utilities from "../Utilities.res.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";

var DataSchema = {};

var Term = AutoDiff.MakeTerm({});

var ExtraOps = AutoDiff.ExtraOperators(Term);

function init() {
  return Math.random() - 0.5;
}

var wbs1 = Utilities.buildArray(28, (function (param) {
        return [
                Term.claimMany(784, init),
                Term.claim(init)
              ];
      }));

var wbs2 = Utilities.buildArray(10, (function (param) {
        return [
                Term.claimMany(28, init),
                Term.claim(init)
              ];
      }));

function f(input) {
  var input$1 = input.flat();
  var input$2 = input$1.map(Term.c);
  var input$3 = wbs1.map(function (param) {
        return Term.$plus(ExtraOps.dotproduct(input$2, param[0]), param[1]);
      });
  var input$4 = wbs2.map(function (param) {
        return Term.$plus(ExtraOps.dotproduct(input$3, param[0]), param[1]);
      });
  return ExtraOps.softmax(input$4);
}

function mode(dist, env) {
  return Term.$$eval(ExtraOps.argmax(dist), env).output | 0;
}

function loss(output, answer) {
  return Term.log(Core__Option.getExn(output[answer], undefined));
}

var MyModel = {
  DataSchema: DataSchema,
  Term: Term,
  f: f,
  mode: mode,
  loss: loss
};

export {
  MyModel ,
}
/* Term Not a pure module */
